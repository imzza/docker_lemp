version: "3.5"

services:
  #PHP
  app:
    build: .
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www/
    volumes:
      - ./:/var/www/
      - ./docker-config/local.ini:/user/local/etc/php/conf.d/local.ini
    links:
      - db

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    depends_on:
      - app
    ports:
      - "8000:80"
      - "443:443"
    volumes:
      - ./:/var/www/
      - ./docker-config/nginx/conf.d/:/etc/nginx/conf.d/
    command: [nginx-debug, "-g", "daemon off;"]

  #websockets
  websocket:
    image: php:cli-alpine3.12
    container_name: websocket
    restart: unless-stopped
    tty: true
    working_dir: /var/www/
    ports:
      - "6001:6001"
    expose:
      - "6001"
    volumes:
      - ./:/var/www/
    command: php artisan websockets:serve

  #MySQL Service
  db:
    image: mysql:5.7
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: prueba
      MYSQL_ROOT_PASSWORD: prueba
    volumes:
      - vol_mysql:/var/lib/mysql/
# volumen para la persistencia de datos
volumes:
  vol_mysql:
