version: '3'

networks:
  laravel:

services:
  site:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl
    depends_on:
      - php
      - mysql
      - flask
    networks:
      - laravel

  mysql:
    image: mysql:5.7.29
    container_name: mysql
    restart: unless-stopped
    # command: --default-authentication-plugin=mysql_native_password
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel
    volumes:
      - ./mysql:/var/lib/mysql
      # - ./mysql_dump:/docker-entrypoint-initdb.d

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - "8082:8080"
    depends_on:
      - mysql

    networks:
      - laravel
    

  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: phpmyadmin
  #   restart: always
  #   ports:
  #     - "8081:80"
  #   depends_on:
  #     - mysql
  #   environment:
  #     PMA_HOST: mysql
  #     MYSQL_ROOT_PASSWORD: secret

  #   networks:
  #     - laravel

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html
    ports:
      - "9000:9000"
    networks:
      - laravel

  composer:
    image: composer:latest
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    networks:
      - laravel

  npm:
    image: node:13.7-alpine
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel
  
  cron:
    build:
      context: .
      dockerfile: cron.dockerfile
    container_name: cron
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel

#  mailhog:
#    image: mailhog/mailhog
#    container_name: mailhog
#    networks:
#      - laravel
#    ports:
#    - "1025:1025"
#    - "8025:8025"


  flask:
    build: ./flask
    container_name: flask
    ports:
      - "5000:5000"
    volumes:
      - ./flask:/code
    environment:
      FLASK_ENV: development
    depends_on:
      - redis
    networks:
      - laravel


  redis:
    image: "redis:alpine"
    networks:
      - laravel